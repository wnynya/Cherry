plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'java'
    id 'idea'
}

group 'com.wnynya.cherry'
version '1.0'

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
}

compileJava {
    options.encoding 'utf-8'
}

repositories {
    mavenCentral()
    maven { // Spigot Repo
        url ("https://hub.spigotmc.org/nexus/content/repositories/snapshots")
    }
    maven { // Paper Repo
        url ("https://papermc.io/repo/repository/maven-public/")
    }
    flatDir {
        dirs ('lib')
    }
}

dependencies {
    // Spigot
    // compileOnly (group: 'org.spigotmc', name:'spigot-api', version: '1.16.1-R0.1-SNAPSHOT')

    // Paper
    compileOnly (group: 'com.destroystokyo.paper', name:'paper-api', version: '1.16.1-R0.1-SNAPSHOT')

    // Vault
    //compileOnly "com.github.MilkBowl:VaultAPI:1.7"
    compileOnly fileTree (dir: 'lib', includes:['Vault.jar'])

    // https://mvnrepository.com/artifact/org.java-websocket/Java-WebSocket
    compile group: 'org.java-websocket', name: 'Java-WebSocket', version: '1.5.1'

    // Apache
    compileOnly (group: 'commons-io', name: 'commons-io', version: '2.6')

    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.3'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.3'

    // https://mvnrepository.com/artifact/log4j/log4j
    //compile group: 'log4j', name: 'log4j', version: '1.2.17'

    // Cucumbery
    compileOnly fileTree (dir: 'lib', includes:['Cucumbery.jar'])

    // NoteBlockAPI
    compileOnly fileTree (dir: 'lib', includes:['NoteBlockAPI-1.4.4.jar'])

}


def dest = "";

if (project.hasProperty('bot')) {
    dest = 'C:\\Users\\Wany\\pluginbot'
}
else if (project.hasProperty('server')) {
    dest = 'C:\\Users\\Wany\\mcs\\wanyfield\\plugins'
}
else if (project.hasProperty('test')) {
    dest = 'C:\\Users\\Wany\\mcs\\test\\plugins'
}

jar {
     destinationDirectory.set(new File(dest))
    archiveFileName.set('Cherry.jar')
    manifest {
        attributes 'Main-Class': 'com.wnynya.cherry.Cherry'
    }
    from configurations.runtime.collect { zipTree(it) }
}

processResources {
    include '**/*.yml'
    expand(version: version, name: project.name)
    filteringCharset 'utf-8'
}
